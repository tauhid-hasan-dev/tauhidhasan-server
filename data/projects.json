[
    {
        "id": "01",
        "img": "https://i.ibb.co/B2VrfSY/dsfsdfsdf.jpg",
        "imgOne": "https://i.ibb.co/f9vddjp/01-admin.jpg",
        "imgTwo": "https://i.ibb.co/Qk6nYfy/01-buyer.jpg",
        "imgThree": "https://i.ibb.co/BGnGQrh/01-seller.jpg",
        "imgFour": "https://i.ibb.co/n0WBp1w/01-advertized-items.jpg",
        "imgFive": "https://i.ibb.co/zPXbxmT/01-categories.jpg",
        "imgSix": "https://i.ibb.co/prdN346/01-catergory.jpg",
        "textOne": "An admin can delete any user and verify a seller",
        "textTwo": "Buyer can buy any book he/she booked earlier ",
        "textThree": "Seller can add a book according to category",
        "textFour": "Seller can advertize any book which is not sold yet",
        "textFive": "Buyer can buy a book by any category",
        "textSix": "All books according to the category",
        "about": "A rare and old books store",
        "headline": "Rare Books- Buy & sell",
        "summery": "Admin dashboard implemented. Admin can see and delete any user.Handled user authentication with firebase and secured API with JWT. A buyer can buy a book. A seller can add, delete and advertise  books.",
        "live": "https://used-book-store-90b6b.web.app/",
        "client": "https://github.com/tauhid-hasan-dev/used-books-client",
        "server": "https://github.com/tauhid-hasan-dev/used-books-server",
        "details":"This is an old and rare books store. A user can buy and sell his/her old books. Dashboard implemented. Users can sign up as a buyer or seller. Admin is set manually. Admin email and password are mentioned above.Admin can see all sellers, all buyers, and reported item routes. A buyer can see my product route and a seller can see my products and add product routes. Admin can verify a seller and after verification a blue will be visible. Admin can delete any user or any books which are reported. A seller can add a book, advertise and delete books he/she wanted. A buyer can see the booked product and he/she can report to the admin if he/she thinks the seller is a scam, etc. User authentication is implemented for both email and google users, with firebase authentication. User authorization is implemented for every role with JWT(JSON web token). Payment gateway implemented with stripe. After payment is successful, the seller will see the product status is 'SOLD' instead of Available. Book will be deleted from both the advertised section and the category section after the payment is successful. 404 routers added normal routes and for dynamic routes, 404 pages were added as well as an error element. Private routing, Dynamic routing, admin route, seller route, and buyer route applied. Custom hook created and used for JWT verification.",
        "technology": [
            "ReactJs",
            "Tailwind CSS",
            "ExpressJs",
            "MongoDB",
            "Firebase",
            "Stripe",
            "Axios"
        ]
    },
    {
        "id": "02",
        "img": "https://i.ibb.co/fqskycJ/zaha.jpg",
        "imgOne": "https://i.ibb.co/M5F5Wm3/02-services.jpg",
        "imgTwo": "https://i.ibb.co/k4CV5CF/02-details-add-review.jpg",
        "imgThree": "https://i.ibb.co/R991Mj9/02-review.jpg",
        "imgFour": "https://i.ibb.co/jJgwg52/02-myreviews.jpg",
        "imgFive": "https://i.ibb.co/XjbxKNM/02-add-service.jpg",
        "imgSix": "https://i.ibb.co/rvVGWZV/02-notlogged.jpg",
        "textOne": "Users can see the latest service in the home page",
        "textTwo": "A logged in user go the details and add a review",
        "textThree": "User can see other reviews in service details",
        "textFour": "User can see all his/her reviews in 'My Reviews'",
        "textFive": "Admin can add a service",
        "textSix": "If user is not logged in user cant add a review",
        "about": "A service based wep app",
        "headline": "Architect Zaha Hadid",
        "summery": "'Users can see service details and add a review for a specific service.Only logged-in users can go to my reviews,edit and delete a review.SPA, CRUD, responsive, Firebase(Auth), and authorization(JWT)",
        "live": "https://architect-tauhid-hasan.web.app/",
        "client": "https://github.com/tauhid-hasan-dev/architect-zaha-hadid-client",
        "server": "https://github.com/tauhid-hasan-dev/architect-zaha-hadid-server",
        "details": "This is a service based website for an architect , a single page application and created with Create react app. A full stack website. React js used for frontend and for the backend, express js used for creating api and connect with mongodb. With mongo CRUD operation, a user can comment, delete and edit their comment. Firebase authentication used for the User Authentication. 404 router added normal routes and for dynamic routes 404 page added as well as an error element. Custom API used in this project.(Dynamic API used as well). React router used for routing and dynamic routing applied. Private routing applied for the add service page and add my review page when the user is not logged in. Tailwind css and Daisy Ui used for styling and the web app is fully responsive. React Icon package used for icons. Hot toaster used for the notification.",
        "technology": [
            "ReactJs",
            "Tailwind CSS",
            "ExpressJs",
            "MongoDB",
            "Firebase",
            "JSON Web Token"
        ]
    },
    {
        "id": "03",
        "img": "https://i.ibb.co/6NQnWhP/2.jpg",
        "imgOne": "https://i.ibb.co/phTXstj/03-login.jpg",
        "imgTwo": "https://i.ibb.co/QC7wz3F/03-courses.jpg",
        "imgThree": "https://i.ibb.co/vJgFdbn/03-details.jpg",
        "imgFour": "https://i.ibb.co/n7QB1TY/03-paymment.jpg",
        "imgFive": "https://i.ibb.co/JvCGnHq/03-logged-user-image.jpg",
        "imgSix": "https://i.ibb.co/55XX1BT/03-faq.jpg",
        "textOne": "User can log in with email and password also with google and github",
        "textTwo": "They can see all the courses",
        "textThree": "Students can go to the course details",
        "textFour": "Only logged in user can go to the payment page",
        "textFive": "A logged in student can see his photo and logout button in the",
        "textSix": "Students can see the frequently asked questions",
        "about": "An Ed-Tech website for a startup",
        "headline": "edu-Cate",
        "summery": "Firebase user authentication applied with mail, google and GitHub. Dynamic routing in course details. Private route applied.SPA, responsive, unique design, private routes, dynamic routes.",
        "live": "https://learning-platform-client-d552c.web.app/",
        "client": "https://github.com/tauhid-hasan-dev/edu-cate-ed-tech-client",
        "server": "https://github.com/tauhid-hasan-dev/edu-cate-ed-tech-server",
        "details": "This is an ed-tech website, a single page application and created with Create react app. Firebase authentication used for the User Authentication. Custom API used in this project.(Dynamic API used as well). React router used for routing and dynamic routing applied. Private routing applied for the checkout page when the user is not logged in. Tailwind css and Daisy Ui used for styling and the web app is fully responsive.React Icon package used for icons.",
        "technology": [
            "ReactJs",
            "Tailwind CSS",
            "ExpressJs",
            "Firebase"
        ]
    }
]